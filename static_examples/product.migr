name :product
depends [:product_category]

source_with :method => :static, :connection => :conn1 do
  base_model "product.category"
  fields do
    [
      {:name => 'id', :type => 'integer'},
      {:name => 'name', :type => 'char'},
      {:name => 'price', :type => 'float'},
      {:name => 'category', :type => 'many2one', :relation => 'product.category'},
      {:name => 'source_only_field', :type => 'integer'},
      {:name => 'conflict_field', :type => 'integer'},
      {:name => 'relation_conflict_field', :type => 'many2one', :relation => 'product.uom'},
    ]
  end

  data do
  [
  {:id => 1,
   :name => 'cauliflower',
   :price => 3.0,
   :category => 1},
  {:id => 2,
   :name => 'Mango',
   :price => 5.0,
  :category => 2},
  {:id => 2,
   :name => 'Carrot',
   :price => 0.5,
   :category => 1}
  ]
  end
end

target_with :method => :ooor do
  base_model "product.category"

  #fields do
  #  [
  #    {:name => 'id', :type => 'integer'},
  #    {:name => 'name', :type => 'char'},
  #    {:name => 'price', :type => 'float'},
  #    {:name => 'category', :type => 'many2one', :relation => 'product.category'},
  #    {:name => 'target_only_field', :type => 'integer'},
  #    {:name => 'conflict_field', :type => 'char'},
  #    {:name => 'relation_conflict_field', :type => 'many2one', :relation => 'product.supplier'},
  #  ]
  #end
end

before do
  puts "before"
end

# TODO
# preload(:foo_ids) do
#   mapping = {}
#   source.models['bar'].find(:all, :fields => ['id', 'f_key']).map { |x| mapping[x.f_key] = x.id }
#   mapping
# end

after do
  puts "after"
end

lines_actions do

#  auto_migrate_fields false
#  auto_migrate_fields :only => [:name]
#  auto_migrate_fields :exclude => [:name]

  before do
    puts "line before "
  end

  before_save do
    puts "before save"
  end

  set_value :price do
    source_line[:price] * 10
  end

  set_value :target_only_field do
    'bar'
  end

  after do
    puts "line after"
  end

end